### [2.0.0] - 2024-02-18

### Changes in `SP_PortalActor.cpp`:

- Added inclusion of `"Components/SP_PortalNetPlayerComponent.h"` at line 6.
- Added inclusion of `"Engine/LocalPlayer.h"` at line 12.
- Added inclusion of `"SceneView.h"` at line 13.
- Added inclusion of `"Library/SPL_Library.h"` at line 14.
- Added a new static function namespace `SPL_PortalActor` at line 18.
- Added initialization of `bReplicates`, `bAlwaysRelevant`, and `NetCullDistanceSquared` at lines 35-37.
- Changed `SP_DefaultLumenSettings()` to `SPL_PortalActor::SP_DefaultLumenSettings()` at line 181.
- Changed `SP_SetupStaticMeshComponent()` to `SPL_PortalActor::SP_SetupStaticMeshComponent()` at lines 150 and 157.
- Changed `SP_LoadPortalStaticMeshComponent()` to `SPL_PortalActor::SP_LoadPortalStaticMeshComponent()` at lines 199, 203, and 207.
- Added check for `GetNetMode()` in `InitializeActor()` method at lines 232-235.
- Added check for `GetNetMode()` in `BeginPlay()` method at lines 397-401.
- Added check for `GetNetMode()` in `Tick()` method at lines 442, 459, and 666.
- Added check for `GetNetMode()` in `EndPlay()` method at lines 424-437.
- Added a new console variable `CVarSLP_UseLocalProjectionData` at line 23.
- Modified the logic in various methods to handle network replication correctly based on the current network mode.

### Changes in `SP_PortalHub.h`:

- Added new properties:
  - `DynamiclySetNetRelevance` (line 64): Controls whether to set `AlwaysRelevant` and `NetCullDistanceSquared` dynamically.
  - `AlwaysNetRelevant` (line 68): If true, sets `AlwaysRelevant` to true and `NetCullDistanceSquared` to 0 on BeginPlay.
  - `bUseOverrideRenderTextureResolution` (line 74): Enables overriding render texture resolution.
  - `OverrideRenderTextureResolution` (line 78): Used to set the resolution manually if automatic resolution fails.
- Modified `CreateRenderTexture` function signature (line 151): Changed to non-static and added parameters for quality, format, and scale.
- Added `USP_PortalNetPlayerComponent` as a friend class (line 176).

### Changes in `SP_PortalHub.cpp`:

- Added inclusion of `"Components/SP_PortalNetPlayerComponent.h"` at line 7.
- Removed the namespace and associated function `SP_GetTextureResolution` at lines 47-104.
- Added inclusion of `"Library/SPL_Library.h"` at line 54.
- Added initialization of `bReplicates`, `bAlwaysRelevant`, and `NetCullDistanceSquared` at lines 80-82.
- Modified `CreateOrGetPortalHub()` method to use `SPL_PortalHub::GlobalPortalHub` instead of `GlobalPortalHub` at lines 101-118.
- Modified `CreateRenderTexture()` method to use `StreamingPortalHelper::SPL_Library::CreateRenderTexture` at lines 125-138.
- Modified `CreateRenderTextureQuick()` method to return `nullptr` if not in client or standalone mode at lines 160-163.
- Modified `GetRenderTexture()` method to return `nullptr` if not in client or standalone mode at lines 175-178.
- Modified `BeginPlay()` method to create render texture only in standalone mode at lines 190-194.
- Modified `EndPlay()` method to use `SPL_PortalHub::GlobalPortalHub` instead of `GlobalPortalHub` at line 204.
- Modified `ResolvePortalPairs()` method to use `GetFName()` instead of direct comparison for portal names at lines 271-284.
- Modified `RemovePortalActor()` method to handle cleaning up target portal and disabling tick if valid at lines 292-315.

### Changes in `SP_PortalLevelStreamManager.h`:

- Added `USP_PortalNetPlayerComponent` as a friend class (line 91).
- Added a new function:
  - `ServerCanUnload` (line 195): Returns true if the level is not in use by any player or visible by any portal, indicating it can be unloaded.

### Changes in `SP_PortalLevelStreamManager.cpp`:

- Added inclusion of `"Components/SP_PortalNetPlayerComponent.h"` at line 7.
- Added inclusion of `"Library/SPL_Library.h"` at line 12.
- Added initialization of `bReplicates`, `bAlwaysRelevant`, and `NetCullDistanceSquared` at lines 38-40.
- Modified `BeginPlay()` method to only run on client or standalone mode at lines 50-63.
- Added `ServerCanUnload()` method to determine if the server can unload the level at lines 87-139.
- Modified `Tick()` method to only run on client or standalone mode at lines 156-194.
- Modified `CheckShowLevel()` method to only run on client or standalone mode at lines 222-261.
- Modified `LoadLevel()` method to only run initialization on client or standalone mode at lines 289-325.
- Modified `InitStreamingLevel()` method to only run on client or standalone mode at lines 335-348.
- Modified `SetLevelBounds()` method to notify the server of level bounds change at lines 369-383.
- Modified `OnLevelShown()` method to only run on client or standalone mode at lines 449-458.


### Changes in `SP_PortalActorComponent.cpp`:

- Added inclusion of `"Components/SP_PortalNetPlayerComponent.h"` at line 7.
- Added inclusion of `"Library/SPL_Library.h"` at line 13.
- Set `SetIsReplicatedByDefault(false)` at line 28.
- Modified `BeginPlay()` method to use `GetWorld()->PersistentLevel` instead of `GetCurrentLevel()` at line 57.
- Added a check to ensure the `PortalTwin` component has the tag "PortalTwin" at line 70.
- Added logic to hide the `PortalTwin` sooner on remote machines at lines 78-87.
- Modified `ActivatePortal()` method to handle replication and adjust player location and rotation accordingly at lines 94-229.
- Added logic to adjust player location and rotation for networked characters at lines 201-215.

### Changes in `SP_PortalCameraManagerComponent.h`:

- Added forward declaration of `UCameraComponent` at line 14.
- Added `USP_PortalActorComponent` as a friend class at line 137.
- Removed the redundant comment line at line 224.
- Removed the empty line at line 226.

### Changes in `SP_PortalCameraManagerComponent.cpp`:

- Added inclusion of `"Runtime/Launch/Resources/Version.h"` at line 4.
- Introduced a namespace `SPL_PortalCameraManagerComponent` containing utility functions for finding camera components and cameras at lines 6-67.
- Added a call to `SetIsReplicatedByDefault(false)` at line 22.
- Modified `ActivatePortal()` method to use `SPL_PortalCameraManagerComponent::SP_FindCamera(PlayerCameraManager)` instead of `SP_FindCamera(PlayerCameraManager)` at line 365.
- Added logic to prevent the camera and `PortalTwin` from being behind the portal simultaneously at lines 371-380.


### Changes in `SP_PortalPlayerComponent.cpp`:

- Added inclusion of `"Components/SP_PortalNetPlayerComponent.h"` at line 3.
- Added inclusion of `"Library/SPL_Library.h"` at line 6.
- Added a call to `SetIsReplicatedByDefault(false)` at line 35.
- Modified `BeginPlay()` method to skip further initialization if not in client or standalone mode at lines 42-49.
- Added logic to set component tags for `PortalTwin` if not already present at lines 58-61.
- Modified `EndPlay()` method to only execute cleanup if in client or standalone mode at lines 78-92.
- Modified `CustomTick()` method to skip further processing if not in client or standalone mode at lines 101-103.
- Modified `ActivatePortal()` method to only execute if the owner character is locally owned at lines 215-235.
- Modified `HasOverlappedPortal()` method to only execute if `PortalCameraComponent` is valid at lines 238-257.
- Modified `TrackPortal()` method to consider if the owner character is locally controlled or in a simulated proxy role at various places throughout the method, ensuring proper functionality in networked scenarios at lines 292-395.


### [1.0.0] - 2023-06-13

Initial Release